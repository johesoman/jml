module ParserImpl 
// Implementation file for parser generated by fsyacc
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "ParserImpl.fsy"




open Lang




# 15 "ParserImpl.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | DIVOP
  | MULOP
  | SUBOP
  | ADDOP
  | ANDOP
  | OROP
  | GEOP
  | LEOP
  | GTOP
  | LTOP
  | NEOP
  | EQOP
  | EQEQOP
  | RPAR
  | LPAR
  | DEREF
  | FATARROW
  | ARROW
  | FUN
  | ELSE
  | THEN
  | IF
  | IN
  | REC
  | LET
  | EOF
  | TRUE
  | FALSE
  | SEMI
  | COLON
  | REFASN
  | REF
  | AND
  | DOT
  | END
  | COMMA
  | RBRACE
  | LBRACE
  | RBRACK
  | LBRACK
  | COLONCOLON
  | BAR
  | TYPE
  | MATCH
  | ATSIGN
  | PLUSPLUS
  | INT of (int)
  | ID of (string)
  | NAME of (string)
  | STRING of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_DIVOP
    | TOKEN_MULOP
    | TOKEN_SUBOP
    | TOKEN_ADDOP
    | TOKEN_ANDOP
    | TOKEN_OROP
    | TOKEN_GEOP
    | TOKEN_LEOP
    | TOKEN_GTOP
    | TOKEN_LTOP
    | TOKEN_NEOP
    | TOKEN_EQOP
    | TOKEN_EQEQOP
    | TOKEN_RPAR
    | TOKEN_LPAR
    | TOKEN_DEREF
    | TOKEN_FATARROW
    | TOKEN_ARROW
    | TOKEN_FUN
    | TOKEN_ELSE
    | TOKEN_THEN
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_REC
    | TOKEN_LET
    | TOKEN_EOF
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_SEMI
    | TOKEN_COLON
    | TOKEN_REFASN
    | TOKEN_REF
    | TOKEN_AND
    | TOKEN_DOT
    | TOKEN_END
    | TOKEN_COMMA
    | TOKEN_RBRACE
    | TOKEN_LBRACE
    | TOKEN_RBRACK
    | TOKEN_LBRACK
    | TOKEN_COLONCOLON
    | TOKEN_BAR
    | TOKEN_TYPE
    | TOKEN_MATCH
    | TOKEN_ATSIGN
    | TOKEN_PLUSPLUS
    | TOKEN_INT
    | TOKEN_ID
    | TOKEN_NAME
    | TOKEN_STRING
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_prog
    | NONTERM_arrowSepType2
    | NONTERM_commaSepType1
    | NONTERM_type1
    | NONTERM_type2
    | NONTERM_type3
    | NONTERM_parameter
    | NONTERM_parameters
    | NONTERM_returnType
    | NONTERM_recDefRec
    | NONTERM_variantCase
    | NONTERM_variantRec
    | NONTERM_typeDef
    | NONTERM_tops
    | NONTERM_topLet
    | NONTERM_manyMatchCase
    | NONTERM_expr1
    | NONTERM_semiSepExpr3
    | NONTERM_expr2
    | NONTERM_expr3
    | NONTERM_expr4
    | NONTERM_expr5
    | NONTERM_expr6
    | NONTERM_expr7
    | NONTERM_expr8
    | NONTERM_expr9
    | NONTERM_expr10
    | NONTERM_expr11
    | NONTERM_expr12
    | NONTERM_commaSepExpr1
    | NONTERM_recordRow
    | NONTERM_commaSepRecordRow
    | NONTERM_expr13
    | NONTERM_pat1
    | NONTERM_pat2
    | NONTERM_commaSepPat1
    | NONTERM_pat3

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | DIVOP  -> 0 
  | MULOP  -> 1 
  | SUBOP  -> 2 
  | ADDOP  -> 3 
  | ANDOP  -> 4 
  | OROP  -> 5 
  | GEOP  -> 6 
  | LEOP  -> 7 
  | GTOP  -> 8 
  | LTOP  -> 9 
  | NEOP  -> 10 
  | EQOP  -> 11 
  | EQEQOP  -> 12 
  | RPAR  -> 13 
  | LPAR  -> 14 
  | DEREF  -> 15 
  | FATARROW  -> 16 
  | ARROW  -> 17 
  | FUN  -> 18 
  | ELSE  -> 19 
  | THEN  -> 20 
  | IF  -> 21 
  | IN  -> 22 
  | REC  -> 23 
  | LET  -> 24 
  | EOF  -> 25 
  | TRUE  -> 26 
  | FALSE  -> 27 
  | SEMI  -> 28 
  | COLON  -> 29 
  | REFASN  -> 30 
  | REF  -> 31 
  | AND  -> 32 
  | DOT  -> 33 
  | END  -> 34 
  | COMMA  -> 35 
  | RBRACE  -> 36 
  | LBRACE  -> 37 
  | RBRACK  -> 38 
  | LBRACK  -> 39 
  | COLONCOLON  -> 40 
  | BAR  -> 41 
  | TYPE  -> 42 
  | MATCH  -> 43 
  | ATSIGN  -> 44 
  | PLUSPLUS  -> 45 
  | INT _ -> 46 
  | ID _ -> 47 
  | NAME _ -> 48 
  | STRING _ -> 49 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_DIVOP 
  | 1 -> TOKEN_MULOP 
  | 2 -> TOKEN_SUBOP 
  | 3 -> TOKEN_ADDOP 
  | 4 -> TOKEN_ANDOP 
  | 5 -> TOKEN_OROP 
  | 6 -> TOKEN_GEOP 
  | 7 -> TOKEN_LEOP 
  | 8 -> TOKEN_GTOP 
  | 9 -> TOKEN_LTOP 
  | 10 -> TOKEN_NEOP 
  | 11 -> TOKEN_EQOP 
  | 12 -> TOKEN_EQEQOP 
  | 13 -> TOKEN_RPAR 
  | 14 -> TOKEN_LPAR 
  | 15 -> TOKEN_DEREF 
  | 16 -> TOKEN_FATARROW 
  | 17 -> TOKEN_ARROW 
  | 18 -> TOKEN_FUN 
  | 19 -> TOKEN_ELSE 
  | 20 -> TOKEN_THEN 
  | 21 -> TOKEN_IF 
  | 22 -> TOKEN_IN 
  | 23 -> TOKEN_REC 
  | 24 -> TOKEN_LET 
  | 25 -> TOKEN_EOF 
  | 26 -> TOKEN_TRUE 
  | 27 -> TOKEN_FALSE 
  | 28 -> TOKEN_SEMI 
  | 29 -> TOKEN_COLON 
  | 30 -> TOKEN_REFASN 
  | 31 -> TOKEN_REF 
  | 32 -> TOKEN_AND 
  | 33 -> TOKEN_DOT 
  | 34 -> TOKEN_END 
  | 35 -> TOKEN_COMMA 
  | 36 -> TOKEN_RBRACE 
  | 37 -> TOKEN_LBRACE 
  | 38 -> TOKEN_RBRACK 
  | 39 -> TOKEN_LBRACK 
  | 40 -> TOKEN_COLONCOLON 
  | 41 -> TOKEN_BAR 
  | 42 -> TOKEN_TYPE 
  | 43 -> TOKEN_MATCH 
  | 44 -> TOKEN_ATSIGN 
  | 45 -> TOKEN_PLUSPLUS 
  | 46 -> TOKEN_INT 
  | 47 -> TOKEN_ID 
  | 48 -> TOKEN_NAME 
  | 49 -> TOKEN_STRING 
  | 52 -> TOKEN_end_of_input
  | 50 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_prog 
    | 3 -> NONTERM_prog 
    | 4 -> NONTERM_prog 
    | 5 -> NONTERM_arrowSepType2 
    | 6 -> NONTERM_arrowSepType2 
    | 7 -> NONTERM_commaSepType1 
    | 8 -> NONTERM_commaSepType1 
    | 9 -> NONTERM_type1 
    | 10 -> NONTERM_type1 
    | 11 -> NONTERM_type2 
    | 12 -> NONTERM_type2 
    | 13 -> NONTERM_type3 
    | 14 -> NONTERM_type3 
    | 15 -> NONTERM_type3 
    | 16 -> NONTERM_type3 
    | 17 -> NONTERM_type3 
    | 18 -> NONTERM_parameter 
    | 19 -> NONTERM_parameter 
    | 20 -> NONTERM_parameters 
    | 21 -> NONTERM_parameters 
    | 22 -> NONTERM_returnType 
    | 23 -> NONTERM_returnType 
    | 24 -> NONTERM_recDefRec 
    | 25 -> NONTERM_recDefRec 
    | 26 -> NONTERM_variantCase 
    | 27 -> NONTERM_variantCase 
    | 28 -> NONTERM_variantRec 
    | 29 -> NONTERM_variantRec 
    | 30 -> NONTERM_typeDef 
    | 31 -> NONTERM_typeDef 
    | 32 -> NONTERM_typeDef 
    | 33 -> NONTERM_tops 
    | 34 -> NONTERM_tops 
    | 35 -> NONTERM_tops 
    | 36 -> NONTERM_topLet 
    | 37 -> NONTERM_topLet 
    | 38 -> NONTERM_manyMatchCase 
    | 39 -> NONTERM_manyMatchCase 
    | 40 -> NONTERM_expr1 
    | 41 -> NONTERM_expr1 
    | 42 -> NONTERM_expr1 
    | 43 -> NONTERM_expr1 
    | 44 -> NONTERM_expr1 
    | 45 -> NONTERM_expr1 
    | 46 -> NONTERM_expr1 
    | 47 -> NONTERM_semiSepExpr3 
    | 48 -> NONTERM_semiSepExpr3 
    | 49 -> NONTERM_expr2 
    | 50 -> NONTERM_expr2 
    | 51 -> NONTERM_expr2 
    | 52 -> NONTERM_expr3 
    | 53 -> NONTERM_expr3 
    | 54 -> NONTERM_expr4 
    | 55 -> NONTERM_expr4 
    | 56 -> NONTERM_expr5 
    | 57 -> NONTERM_expr5 
    | 58 -> NONTERM_expr6 
    | 59 -> NONTERM_expr6 
    | 60 -> NONTERM_expr6 
    | 61 -> NONTERM_expr6 
    | 62 -> NONTERM_expr6 
    | 63 -> NONTERM_expr6 
    | 64 -> NONTERM_expr6 
    | 65 -> NONTERM_expr7 
    | 66 -> NONTERM_expr7 
    | 67 -> NONTERM_expr7 
    | 68 -> NONTERM_expr8 
    | 69 -> NONTERM_expr8 
    | 70 -> NONTERM_expr9 
    | 71 -> NONTERM_expr9 
    | 72 -> NONTERM_expr9 
    | 73 -> NONTERM_expr10 
    | 74 -> NONTERM_expr10 
    | 75 -> NONTERM_expr10 
    | 76 -> NONTERM_expr11 
    | 77 -> NONTERM_expr11 
    | 78 -> NONTERM_expr11 
    | 79 -> NONTERM_expr11 
    | 80 -> NONTERM_expr12 
    | 81 -> NONTERM_expr12 
    | 82 -> NONTERM_expr12 
    | 83 -> NONTERM_commaSepExpr1 
    | 84 -> NONTERM_commaSepExpr1 
    | 85 -> NONTERM_recordRow 
    | 86 -> NONTERM_commaSepRecordRow 
    | 87 -> NONTERM_commaSepRecordRow 
    | 88 -> NONTERM_expr13 
    | 89 -> NONTERM_expr13 
    | 90 -> NONTERM_expr13 
    | 91 -> NONTERM_expr13 
    | 92 -> NONTERM_expr13 
    | 93 -> NONTERM_expr13 
    | 94 -> NONTERM_expr13 
    | 95 -> NONTERM_expr13 
    | 96 -> NONTERM_expr13 
    | 97 -> NONTERM_expr13 
    | 98 -> NONTERM_expr13 
    | 99 -> NONTERM_expr13 
    | 100 -> NONTERM_pat1 
    | 101 -> NONTERM_pat1 
    | 102 -> NONTERM_pat2 
    | 103 -> NONTERM_pat2 
    | 104 -> NONTERM_pat2 
    | 105 -> NONTERM_commaSepPat1 
    | 106 -> NONTERM_commaSepPat1 
    | 107 -> NONTERM_pat3 
    | 108 -> NONTERM_pat3 
    | 109 -> NONTERM_pat3 
    | 110 -> NONTERM_pat3 
    | 111 -> NONTERM_pat3 
    | 112 -> NONTERM_pat3 
    | 113 -> NONTERM_pat3 
    | 114 -> NONTERM_pat3 
    | 115 -> NONTERM_pat3 
    | 116 -> NONTERM_pat3 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 52 
let _fsyacc_tagOfErrorTerminal = 50

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | DIVOP  -> "DIVOP" 
  | MULOP  -> "MULOP" 
  | SUBOP  -> "SUBOP" 
  | ADDOP  -> "ADDOP" 
  | ANDOP  -> "ANDOP" 
  | OROP  -> "OROP" 
  | GEOP  -> "GEOP" 
  | LEOP  -> "LEOP" 
  | GTOP  -> "GTOP" 
  | LTOP  -> "LTOP" 
  | NEOP  -> "NEOP" 
  | EQOP  -> "EQOP" 
  | EQEQOP  -> "EQEQOP" 
  | RPAR  -> "RPAR" 
  | LPAR  -> "LPAR" 
  | DEREF  -> "DEREF" 
  | FATARROW  -> "FATARROW" 
  | ARROW  -> "ARROW" 
  | FUN  -> "FUN" 
  | ELSE  -> "ELSE" 
  | THEN  -> "THEN" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | REC  -> "REC" 
  | LET  -> "LET" 
  | EOF  -> "EOF" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | SEMI  -> "SEMI" 
  | COLON  -> "COLON" 
  | REFASN  -> "REFASN" 
  | REF  -> "REF" 
  | AND  -> "AND" 
  | DOT  -> "DOT" 
  | END  -> "END" 
  | COMMA  -> "COMMA" 
  | RBRACE  -> "RBRACE" 
  | LBRACE  -> "LBRACE" 
  | RBRACK  -> "RBRACK" 
  | LBRACK  -> "LBRACK" 
  | COLONCOLON  -> "COLONCOLON" 
  | BAR  -> "BAR" 
  | TYPE  -> "TYPE" 
  | MATCH  -> "MATCH" 
  | ATSIGN  -> "ATSIGN" 
  | PLUSPLUS  -> "PLUSPLUS" 
  | INT _ -> "INT" 
  | ID _ -> "ID" 
  | NAME _ -> "NAME" 
  | STRING _ -> "STRING" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | DIVOP  -> (null : System.Object) 
  | MULOP  -> (null : System.Object) 
  | SUBOP  -> (null : System.Object) 
  | ADDOP  -> (null : System.Object) 
  | ANDOP  -> (null : System.Object) 
  | OROP  -> (null : System.Object) 
  | GEOP  -> (null : System.Object) 
  | LEOP  -> (null : System.Object) 
  | GTOP  -> (null : System.Object) 
  | LTOP  -> (null : System.Object) 
  | NEOP  -> (null : System.Object) 
  | EQOP  -> (null : System.Object) 
  | EQEQOP  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | DEREF  -> (null : System.Object) 
  | FATARROW  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | REFASN  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | COLONCOLON  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | ATSIGN  -> (null : System.Object) 
  | PLUSPLUS  -> (null : System.Object) 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 2us; 65535us; 7us; 8us; 14us; 15us; 2us; 65535us; 10us; 11us; 24us; 25us; 9us; 65535us; 9us; 10us; 20us; 21us; 23us; 24us; 29us; 30us; 34us; 35us; 40us; 41us; 44us; 45us; 48us; 49us; 58us; 59us; 10us; 65535us; 6us; 7us; 9us; 16us; 20us; 16us; 23us; 16us; 29us; 16us; 34us; 16us; 40us; 16us; 44us; 16us; 48us; 16us; 58us; 16us; 12us; 65535us; 6us; 19us; 9us; 12us; 13us; 14us; 17us; 18us; 20us; 12us; 23us; 12us; 29us; 12us; 34us; 12us; 40us; 12us; 44us; 12us; 48us; 12us; 58us; 12us; 8us; 65535us; 38us; 38us; 73us; 38us; 74us; 38us; 84us; 38us; 95us; 38us; 103us; 38us; 110us; 111us; 111us; 38us; 7us; 65535us; 38us; 39us; 73us; 75us; 74us; 76us; 84us; 85us; 95us; 96us; 103us; 104us; 111us; 112us; 5us; 65535us; 75us; 77us; 76us; 78us; 85us; 86us; 96us; 97us; 104us; 105us; 2us; 65535us; 45us; 46us; 59us; 60us; 3us; 65535us; 50us; 51us; 55us; 62us; 64us; 65us; 3us; 65535us; 51us; 52us; 62us; 63us; 65us; 66us; 3us; 65535us; 0us; 69us; 67us; 69us; 69us; 69us; 3us; 65535us; 0us; 4us; 67us; 68us; 69us; 70us; 3us; 65535us; 0us; 67us; 67us; 67us; 69us; 67us; 3us; 65535us; 92us; 93us; 122us; 123us; 128us; 129us; 22us; 65535us; 0us; 3us; 79us; 81us; 80us; 82us; 87us; 88us; 91us; 92us; 98us; 99us; 100us; 101us; 106us; 107us; 108us; 109us; 113us; 114us; 116us; 117us; 121us; 122us; 127us; 128us; 131us; 132us; 133us; 134us; 135us; 136us; 193us; 194us; 197us; 198us; 201us; 202us; 206us; 207us; 216us; 217us; 220us; 222us; 2us; 65535us; 139us; 140us; 143us; 144us; 22us; 65535us; 0us; 137us; 79us; 137us; 80us; 137us; 87us; 137us; 91us; 137us; 98us; 137us; 100us; 137us; 106us; 137us; 108us; 137us; 113us; 137us; 116us; 137us; 121us; 137us; 127us; 137us; 131us; 137us; 133us; 137us; 135us; 137us; 193us; 137us; 197us; 137us; 201us; 137us; 206us; 137us; 216us; 137us; 220us; 137us; 25us; 65535us; 0us; 141us; 79us; 141us; 80us; 141us; 87us; 141us; 91us; 141us; 98us; 141us; 100us; 141us; 106us; 141us; 108us; 141us; 113us; 141us; 116us; 141us; 121us; 141us; 127us; 141us; 131us; 141us; 133us; 141us; 135us; 141us; 138us; 139us; 142us; 143us; 146us; 147us; 193us; 141us; 197us; 141us; 201us; 141us; 206us; 141us; 216us; 141us; 220us; 141us; 25us; 65535us; 0us; 145us; 79us; 145us; 80us; 145us; 87us; 145us; 91us; 145us; 98us; 145us; 100us; 145us; 106us; 145us; 108us; 145us; 113us; 145us; 116us; 145us; 121us; 145us; 127us; 145us; 131us; 145us; 133us; 145us; 135us; 145us; 138us; 145us; 142us; 145us; 146us; 145us; 193us; 145us; 197us; 145us; 201us; 145us; 206us; 145us; 216us; 145us; 220us; 145us; 26us; 65535us; 0us; 150us; 79us; 150us; 80us; 150us; 87us; 150us; 91us; 150us; 98us; 150us; 100us; 150us; 106us; 150us; 108us; 150us; 113us; 150us; 116us; 150us; 121us; 150us; 127us; 150us; 131us; 150us; 133us; 150us; 135us; 150us; 138us; 150us; 142us; 150us; 146us; 150us; 148us; 149us; 193us; 150us; 197us; 150us; 201us; 150us; 206us; 150us; 216us; 150us; 220us; 150us; 27us; 65535us; 0us; 153us; 79us; 153us; 80us; 153us; 87us; 153us; 91us; 153us; 98us; 153us; 100us; 153us; 106us; 153us; 108us; 153us; 113us; 153us; 116us; 153us; 121us; 153us; 127us; 153us; 131us; 153us; 133us; 153us; 135us; 153us; 138us; 153us; 142us; 153us; 146us; 153us; 148us; 153us; 151us; 152us; 193us; 153us; 197us; 153us; 201us; 153us; 206us; 153us; 216us; 153us; 220us; 153us; 33us; 65535us; 0us; 166us; 79us; 166us; 80us; 166us; 87us; 166us; 91us; 166us; 98us; 166us; 100us; 166us; 106us; 166us; 108us; 166us; 113us; 166us; 116us; 166us; 121us; 166us; 127us; 166us; 131us; 166us; 133us; 166us; 135us; 166us; 138us; 166us; 142us; 166us; 146us; 166us; 148us; 166us; 151us; 166us; 154us; 155us; 156us; 157us; 158us; 159us; 160us; 161us; 162us; 163us; 164us; 165us; 193us; 166us; 197us; 166us; 201us; 166us; 206us; 166us; 216us; 166us; 220us; 166us; 36us; 65535us; 0us; 171us; 79us; 171us; 80us; 171us; 87us; 171us; 91us; 171us; 98us; 171us; 100us; 171us; 106us; 171us; 108us; 171us; 113us; 171us; 116us; 171us; 121us; 171us; 127us; 171us; 131us; 171us; 133us; 171us; 135us; 171us; 138us; 171us; 142us; 171us; 146us; 171us; 148us; 171us; 151us; 171us; 154us; 171us; 156us; 171us; 158us; 171us; 160us; 171us; 162us; 171us; 164us; 171us; 167us; 168us; 169us; 170us; 173us; 174us; 193us; 171us; 197us; 171us; 201us; 171us; 206us; 171us; 216us; 171us; 220us; 171us; 36us; 65535us; 0us; 172us; 79us; 172us; 80us; 172us; 87us; 172us; 91us; 172us; 98us; 172us; 100us; 172us; 106us; 172us; 108us; 172us; 113us; 172us; 116us; 172us; 121us; 172us; 127us; 172us; 131us; 172us; 133us; 172us; 135us; 172us; 138us; 172us; 142us; 172us; 146us; 172us; 148us; 172us; 151us; 172us; 154us; 172us; 156us; 172us; 158us; 172us; 160us; 172us; 162us; 172us; 164us; 172us; 167us; 172us; 169us; 172us; 173us; 172us; 193us; 172us; 197us; 172us; 201us; 172us; 206us; 172us; 216us; 172us; 220us; 172us; 38us; 65535us; 0us; 179us; 79us; 179us; 80us; 179us; 87us; 179us; 91us; 179us; 98us; 179us; 100us; 179us; 106us; 179us; 108us; 179us; 113us; 179us; 116us; 179us; 121us; 179us; 127us; 179us; 131us; 179us; 133us; 179us; 135us; 179us; 138us; 179us; 142us; 179us; 146us; 179us; 148us; 179us; 151us; 179us; 154us; 179us; 156us; 179us; 158us; 179us; 160us; 179us; 162us; 179us; 164us; 179us; 167us; 179us; 169us; 179us; 173us; 179us; 175us; 176us; 177us; 178us; 193us; 179us; 197us; 179us; 201us; 179us; 206us; 179us; 216us; 179us; 220us; 179us; 40us; 65535us; 0us; 184us; 79us; 184us; 80us; 184us; 87us; 184us; 91us; 184us; 98us; 184us; 100us; 184us; 106us; 184us; 108us; 184us; 113us; 184us; 116us; 184us; 121us; 184us; 127us; 184us; 131us; 184us; 133us; 184us; 135us; 184us; 138us; 184us; 142us; 184us; 146us; 184us; 148us; 184us; 151us; 184us; 154us; 184us; 156us; 184us; 158us; 184us; 160us; 184us; 162us; 184us; 164us; 184us; 167us; 184us; 169us; 184us; 173us; 184us; 175us; 184us; 177us; 184us; 180us; 181us; 182us; 183us; 193us; 184us; 197us; 184us; 201us; 184us; 206us; 184us; 216us; 184us; 220us; 184us; 45us; 65535us; 0us; 190us; 79us; 190us; 80us; 190us; 87us; 190us; 91us; 190us; 98us; 190us; 100us; 190us; 106us; 190us; 108us; 190us; 113us; 190us; 116us; 190us; 121us; 190us; 127us; 190us; 131us; 190us; 133us; 190us; 135us; 190us; 138us; 190us; 142us; 190us; 146us; 190us; 148us; 190us; 151us; 190us; 154us; 190us; 156us; 190us; 158us; 190us; 160us; 190us; 162us; 190us; 164us; 190us; 167us; 190us; 169us; 190us; 173us; 190us; 175us; 190us; 177us; 190us; 180us; 190us; 181us; 185us; 182us; 190us; 183us; 185us; 184us; 185us; 186us; 187us; 188us; 189us; 193us; 190us; 197us; 190us; 201us; 190us; 206us; 190us; 216us; 190us; 220us; 190us; 3us; 65535us; 198us; 199us; 217us; 218us; 222us; 223us; 2us; 65535us; 203us; 204us; 225us; 226us; 2us; 65535us; 204us; 205us; 226us; 227us; 45us; 65535us; 0us; 196us; 79us; 196us; 80us; 196us; 87us; 196us; 91us; 196us; 98us; 196us; 100us; 196us; 106us; 196us; 108us; 196us; 113us; 196us; 116us; 196us; 121us; 196us; 127us; 196us; 131us; 196us; 133us; 196us; 135us; 196us; 138us; 196us; 142us; 196us; 146us; 196us; 148us; 196us; 151us; 196us; 154us; 196us; 156us; 196us; 158us; 196us; 160us; 196us; 162us; 196us; 164us; 196us; 167us; 196us; 169us; 196us; 173us; 196us; 175us; 196us; 177us; 196us; 180us; 196us; 181us; 196us; 182us; 196us; 183us; 196us; 184us; 196us; 186us; 196us; 188us; 196us; 193us; 196us; 197us; 196us; 201us; 196us; 206us; 196us; 216us; 196us; 220us; 196us; 7us; 65535us; 89us; 90us; 119us; 120us; 125us; 126us; 239us; 229us; 241us; 230us; 243us; 231us; 253us; 232us; 8us; 65535us; 89us; 235us; 119us; 235us; 125us; 235us; 233us; 234us; 239us; 235us; 241us; 235us; 243us; 235us; 253us; 235us; 3us; 65535us; 229us; 240us; 231us; 251us; 232us; 254us; 9us; 65535us; 89us; 238us; 119us; 238us; 125us; 238us; 233us; 238us; 236us; 237us; 239us; 238us; 241us; 238us; 243us; 238us; 253us; 238us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 8us; 11us; 21us; 32us; 45us; 54us; 62us; 68us; 71us; 75us; 79us; 83us; 87us; 91us; 95us; 118us; 121us; 144us; 170us; 196us; 223us; 251us; 285us; 322us; 359us; 398us; 439us; 485us; 489us; 492us; 495us; 541us; 549us; 558us; 562us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 5us; 1us; 7us; 1us; 7us; 1us; 7us; 2us; 9us; 12us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 3us; 13us; 14us; 15us; 2us; 13us; 14us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 24us; 2us; 26us; 27us; 1us; 26us; 1us; 26us; 1us; 28us; 1us; 28us; 1us; 28us; 3us; 30us; 31us; 32us; 3us; 30us; 31us; 32us; 3us; 30us; 31us; 32us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 2us; 36us; 37us; 3us; 36us; 37us; 40us; 1us; 36us; 2us; 36us; 40us; 1us; 36us; 2us; 36us; 40us; 1us; 36us; 2us; 36us; 40us; 1us; 36us; 2us; 36us; 40us; 1us; 36us; 2us; 36us; 40us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 38us; 2us; 38us; 100us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 2us; 43us; 44us; 2us; 43us; 44us; 2us; 43us; 44us; 2us; 43us; 44us; 2us; 43us; 100us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 2us; 44us; 100us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 3us; 49us; 50us; 51us; 2us; 49us; 50us; 1us; 50us; 1us; 50us; 3us; 52us; 53us; 54us; 1us; 52us; 1us; 52us; 1us; 54us; 2us; 54us; 56us; 2us; 55us; 56us; 1us; 56us; 7us; 56us; 58us; 59us; 60us; 61us; 62us; 63us; 7us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 58us; 3us; 58us; 65us; 66us; 1us; 59us; 3us; 59us; 65us; 66us; 1us; 60us; 3us; 60us; 65us; 66us; 1us; 61us; 3us; 61us; 65us; 66us; 1us; 62us; 3us; 62us; 65us; 66us; 1us; 63us; 3us; 63us; 65us; 66us; 3us; 64us; 65us; 66us; 1us; 65us; 1us; 65us; 1us; 66us; 1us; 66us; 1us; 67us; 4us; 68us; 69us; 70us; 71us; 1us; 68us; 1us; 68us; 1us; 70us; 3us; 70us; 73us; 74us; 1us; 71us; 3us; 71us; 73us; 74us; 3us; 72us; 73us; 74us; 1us; 73us; 2us; 73us; 76us; 1us; 74us; 2us; 74us; 76us; 2us; 75us; 76us; 3us; 76us; 80us; 81us; 1us; 77us; 3us; 77us; 80us; 81us; 1us; 78us; 3us; 78us; 80us; 81us; 3us; 79us; 80us; 81us; 2us; 80us; 81us; 1us; 80us; 1us; 81us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 83us; 1us; 85us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 86us; 3us; 88us; 89us; 96us; 2us; 88us; 96us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 96us; 2us; 97us; 98us; 1us; 97us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 99us; 1us; 99us; 1us; 99us; 1us; 99us; 2us; 100us; 105us; 3us; 100us; 107us; 116us; 2us; 100us; 115us; 2us; 100us; 116us; 1us; 100us; 1us; 100us; 1us; 101us; 2us; 102us; 103us; 1us; 102us; 1us; 104us; 1us; 105us; 1us; 105us; 3us; 107us; 109us; 116us; 1us; 107us; 2us; 108us; 115us; 1us; 108us; 1us; 109us; 1us; 110us; 1us; 111us; 1us; 112us; 1us; 113us; 1us; 114us; 1us; 115us; 1us; 115us; 1us; 116us; 1us; 116us; 1us; 116us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 29us; 31us; 33us; 35us; 37us; 39us; 41us; 45us; 48us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 101us; 103us; 105us; 107us; 109us; 111us; 115us; 119us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 143us; 145us; 147us; 149us; 151us; 153us; 156us; 160us; 162us; 165us; 167us; 170us; 172us; 175us; 177us; 180us; 182us; 185us; 187us; 189us; 191us; 193us; 195us; 197us; 199us; 202us; 204us; 206us; 208us; 210us; 212us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 230us; 232us; 234us; 236us; 238us; 240us; 242us; 244us; 246us; 248us; 250us; 253us; 256us; 259us; 262us; 265us; 268us; 270us; 272us; 274us; 276us; 278us; 281us; 283us; 285us; 287us; 289us; 291us; 293us; 295us; 297us; 299us; 301us; 303us; 305us; 307us; 309us; 313us; 316us; 318us; 320us; 324us; 326us; 328us; 330us; 333us; 336us; 338us; 346us; 354us; 356us; 360us; 362us; 366us; 368us; 372us; 374us; 378us; 380us; 384us; 386us; 390us; 394us; 396us; 398us; 400us; 402us; 404us; 409us; 411us; 413us; 415us; 419us; 421us; 425us; 429us; 431us; 434us; 436us; 439us; 442us; 446us; 448us; 452us; 454us; 458us; 462us; 465us; 467us; 469us; 471us; 473us; 475us; 477us; 479us; 481us; 483us; 485us; 487us; 489us; 491us; 493us; 497us; 500us; 502us; 504us; 506us; 508us; 510us; 512us; 514us; 516us; 518us; 520us; 522us; 524us; 527us; 529us; 531us; 533us; 535us; 537us; 539us; 541us; 543us; 546us; 550us; 553us; 556us; 558us; 560us; 562us; 565us; 567us; 569us; 571us; 573us; 577us; 579us; 582us; 584us; 586us; 588us; 590us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; |]
let _fsyacc_action_rows = 256
let _fsyacc_actionTableElements = [|18us; 16419us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 72us; 25us; 5us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 42us; 53us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 49152us; 0us; 16385us; 0us; 16386us; 0us; 16387us; 0us; 16388us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 1us; 16390us; 17us; 6us; 0us; 16389us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 1us; 16392us; 35us; 9us; 0us; 16391us; 1us; 16396us; 17us; 13us; 3us; 32768us; 14us; 20us; 39us; 29us; 48us; 28us; 1us; 16390us; 17us; 6us; 0us; 16393us; 0us; 16394us; 3us; 32768us; 14us; 20us; 39us; 29us; 48us; 28us; 0us; 16395us; 0us; 16396us; 5us; 32768us; 13us; 27us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 2us; 32768us; 13us; 22us; 35us; 23us; 0us; 16397us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 1us; 16392us; 35us; 9us; 1us; 32768us; 13us; 26us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 1us; 32768us; 38us; 31us; 0us; 16401us; 1us; 32768us; 47us; 33us; 1us; 32768us; 29us; 34us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 1us; 32768us; 13us; 36us; 0us; 16402us; 0us; 16403us; 2us; 16405us; 14us; 32us; 47us; 37us; 0us; 16404us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 0us; 16406us; 1us; 32768us; 47us; 43us; 1us; 32768us; 29us; 44us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 1us; 16409us; 35us; 42us; 0us; 16408us; 1us; 16411us; 29us; 48us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 0us; 16410us; 1us; 32768us; 48us; 47us; 1us; 16413us; 41us; 50us; 0us; 16412us; 1us; 32768us; 48us; 54us; 1us; 32768us; 11us; 55us; 3us; 32768us; 37us; 56us; 41us; 64us; 48us; 47us; 1us; 32768us; 47us; 57us; 1us; 32768us; 29us; 58us; 4us; 32768us; 14us; 20us; 31us; 17us; 39us; 29us; 48us; 28us; 1us; 16409us; 35us; 42us; 1us; 32768us; 36us; 61us; 0us; 16414us; 1us; 16413us; 41us; 50us; 0us; 16415us; 1us; 32768us; 48us; 47us; 1us; 16413us; 41us; 50us; 0us; 16416us; 2us; 16419us; 24us; 71us; 42us; 53us; 0us; 16417us; 2us; 16419us; 24us; 71us; 42us; 53us; 0us; 16418us; 2us; 32768us; 23us; 83us; 47us; 73us; 2us; 32768us; 23us; 83us; 47us; 74us; 2us; 16405us; 14us; 32us; 47us; 37us; 2us; 16405us; 14us; 32us; 47us; 37us; 1us; 16407us; 29us; 40us; 1us; 16407us; 29us; 40us; 1us; 32768us; 11us; 79us; 1us; 32768us; 11us; 80us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16420us; 1us; 16420us; 22us; 100us; 1us; 32768us; 47us; 84us; 2us; 16405us; 14us; 32us; 47us; 37us; 1us; 16407us; 29us; 40us; 1us; 32768us; 11us; 87us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16421us; 8us; 32768us; 14us; 241us; 26us; 248us; 27us; 247us; 39us; 243us; 46us; 249us; 47us; 250us; 48us; 236us; 49us; 246us; 2us; 32768us; 17us; 91us; 40us; 233us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16423us; 41us; 89us; 0us; 16422us; 1us; 32768us; 47us; 95us; 2us; 16405us; 14us; 32us; 47us; 37us; 1us; 16407us; 29us; 40us; 1us; 32768us; 11us; 98us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 32768us; 22us; 100us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16424us; 1us; 32768us; 47us; 103us; 2us; 16405us; 14us; 32us; 47us; 37us; 1us; 16407us; 29us; 40us; 1us; 32768us; 11us; 106us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 32768us; 22us; 108us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16425us; 2us; 32768us; 14us; 32us; 47us; 37us; 2us; 16405us; 14us; 32us; 47us; 37us; 1us; 32768us; 17us; 113us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16426us; 1us; 32768us; 14us; 116us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 32768us; 13us; 118us; 1us; 32768us; 37us; 119us; 9us; 32768us; 14us; 241us; 26us; 248us; 27us; 247us; 39us; 243us; 41us; 125us; 46us; 249us; 47us; 250us; 48us; 236us; 49us; 246us; 2us; 32768us; 17us; 121us; 40us; 233us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16423us; 41us; 89us; 1us; 32768us; 36us; 124us; 0us; 16427us; 8us; 32768us; 14us; 241us; 26us; 248us; 27us; 247us; 39us; 243us; 46us; 249us; 47us; 250us; 48us; 236us; 49us; 246us; 2us; 32768us; 17us; 127us; 40us; 233us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16423us; 41us; 89us; 1us; 32768us; 36us; 130us; 0us; 16428us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 32768us; 20us; 133us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 32768us; 19us; 135us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16429us; 0us; 16430us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16432us; 28us; 138us; 0us; 16431us; 1us; 16435us; 28us; 142us; 11us; 16433us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16432us; 28us; 138us; 0us; 16434us; 2us; 16437us; 5us; 148us; 30us; 146us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16436us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16438us; 4us; 151us; 1us; 16439us; 4us; 151us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 6us; 16440us; 6us; 164us; 7us; 162us; 8us; 160us; 9us; 158us; 10us; 156us; 11us; 154us; 6us; 16441us; 6us; 164us; 7us; 162us; 8us; 160us; 9us; 158us; 10us; 156us; 11us; 154us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 16442us; 44us; 167us; 45us; 169us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 16443us; 44us; 167us; 45us; 169us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 16444us; 44us; 167us; 45us; 169us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 16445us; 44us; 167us; 45us; 169us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 16446us; 44us; 167us; 45us; 169us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 16447us; 44us; 167us; 45us; 169us; 2us; 16448us; 44us; 167us; 45us; 169us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16449us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16450us; 0us; 16451us; 3us; 16453us; 2us; 177us; 3us; 175us; 40us; 173us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16452us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 16454us; 0us; 182us; 1us; 180us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 16455us; 0us; 182us; 1us; 180us; 2us; 16456us; 0us; 182us; 1us; 180us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 9us; 16457us; 14us; 206us; 26us; 211us; 27us; 210us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 11us; 32768us; 14us; 206us; 15us; 188us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 9us; 16458us; 14us; 206us; 26us; 211us; 27us; 210us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 9us; 16459us; 14us; 206us; 26us; 211us; 27us; 210us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16460us; 33us; 191us; 9us; 32768us; 14us; 206us; 26us; 211us; 27us; 210us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16461us; 33us; 191us; 9us; 32768us; 14us; 206us; 26us; 211us; 27us; 210us; 37us; 225us; 39us; 220us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16462us; 33us; 191us; 1us; 16463us; 33us; 191us; 2us; 32768us; 39us; 193us; 47us; 192us; 0us; 16464us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 32768us; 38us; 195us; 0us; 16465us; 0us; 16466us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16468us; 35us; 197us; 0us; 16467us; 1us; 32768us; 11us; 201us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16469us; 1us; 32768us; 47us; 200us; 1us; 16471us; 35us; 203us; 0us; 16470us; 17us; 32768us; 13us; 209us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 2us; 32768us; 13us; 208us; 35us; 216us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 16us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 1us; 16468us; 35us; 197us; 1us; 32768us; 13us; 219us; 0us; 16480us; 17us; 32768us; 14us; 206us; 15us; 188us; 18us; 110us; 21us; 131us; 23us; 102us; 24us; 94us; 26us; 211us; 27us; 210us; 31us; 186us; 37us; 225us; 38us; 221us; 39us; 220us; 43us; 115us; 46us; 212us; 47us; 213us; 48us; 215us; 49us; 214us; 0us; 16481us; 1us; 16468us; 35us; 197us; 1us; 32768us; 38us; 224us; 0us; 16482us; 1us; 32768us; 47us; 200us; 1us; 16471us; 35us; 203us; 1us; 32768us; 36us; 228us; 0us; 16483us; 2us; 16490us; 35us; 239us; 40us; 233us; 3us; 32768us; 13us; 242us; 35us; 253us; 40us; 233us; 2us; 16490us; 35us; 239us; 40us; 233us; 2us; 16490us; 35us; 239us; 40us; 233us; 8us; 32768us; 14us; 241us; 26us; 248us; 27us; 247us; 39us; 243us; 46us; 249us; 47us; 250us; 48us; 236us; 49us; 246us; 0us; 16484us; 0us; 16485us; 7us; 16487us; 14us; 241us; 26us; 248us; 27us; 247us; 39us; 243us; 46us; 249us; 47us; 250us; 49us; 246us; 0us; 16486us; 0us; 16488us; 8us; 32768us; 14us; 241us; 26us; 248us; 27us; 247us; 39us; 243us; 46us; 249us; 47us; 250us; 48us; 236us; 49us; 246us; 0us; 16489us; 9us; 32768us; 13us; 245us; 14us; 241us; 26us; 248us; 27us; 247us; 39us; 243us; 46us; 249us; 47us; 250us; 48us; 236us; 49us; 246us; 0us; 16491us; 9us; 32768us; 14us; 241us; 26us; 248us; 27us; 247us; 38us; 244us; 39us; 243us; 46us; 249us; 47us; 250us; 48us; 236us; 49us; 246us; 0us; 16492us; 0us; 16493us; 0us; 16494us; 0us; 16495us; 0us; 16496us; 0us; 16497us; 0us; 16498us; 1us; 32768us; 38us; 252us; 0us; 16499us; 8us; 32768us; 14us; 241us; 26us; 248us; 27us; 247us; 39us; 243us; 46us; 249us; 47us; 250us; 48us; 236us; 49us; 246us; 1us; 32768us; 13us; 255us; 0us; 16500us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 19us; 20us; 21us; 22us; 23us; 24us; 29us; 31us; 32us; 37us; 39us; 40us; 42us; 46us; 48us; 49us; 50us; 54us; 55us; 56us; 62us; 65us; 66us; 71us; 73us; 75us; 76us; 77us; 78us; 83us; 85us; 86us; 88us; 90us; 95us; 97us; 98us; 99us; 102us; 103us; 108us; 109us; 111us; 113us; 118us; 120us; 121us; 123us; 128us; 129us; 131us; 133us; 134us; 136us; 138us; 142us; 144us; 146us; 151us; 153us; 155us; 156us; 158us; 159us; 161us; 163us; 164us; 167us; 168us; 171us; 172us; 175us; 178us; 181us; 184us; 186us; 188us; 190us; 192us; 209us; 226us; 227us; 229us; 231us; 234us; 236us; 238us; 255us; 256us; 265us; 268us; 285us; 287us; 288us; 290us; 293us; 295us; 297us; 314us; 316us; 333us; 334us; 336us; 339us; 341us; 343us; 360us; 362us; 379us; 380us; 383us; 386us; 388us; 405us; 406us; 408us; 425us; 427us; 429us; 439us; 442us; 459us; 461us; 463us; 464us; 473us; 476us; 493us; 495us; 497us; 498us; 515us; 517us; 534us; 536us; 553us; 554us; 555us; 567us; 569us; 570us; 572us; 584us; 586us; 587us; 590us; 602us; 603us; 615us; 617us; 619us; 631us; 638us; 645us; 657us; 660us; 672us; 675us; 687us; 690us; 702us; 705us; 717us; 720us; 732us; 735us; 738us; 750us; 751us; 763us; 764us; 765us; 769us; 781us; 782us; 794us; 797us; 809us; 812us; 815us; 827us; 837us; 849us; 859us; 869us; 871us; 881us; 883us; 893us; 895us; 897us; 900us; 901us; 918us; 920us; 921us; 922us; 939us; 941us; 942us; 944us; 961us; 962us; 964us; 966us; 967us; 985us; 988us; 989us; 990us; 991us; 992us; 993us; 994us; 995us; 996us; 1013us; 1015us; 1017us; 1018us; 1036us; 1037us; 1039us; 1041us; 1042us; 1044us; 1046us; 1048us; 1049us; 1052us; 1056us; 1059us; 1062us; 1071us; 1072us; 1073us; 1081us; 1082us; 1083us; 1092us; 1093us; 1103us; 1104us; 1114us; 1115us; 1116us; 1117us; 1118us; 1119us; 1120us; 1121us; 1123us; 1124us; 1133us; 1135us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 3us; 0us; 3us; 0us; 4us; 1us; 2us; 1us; 3us; 6us; 2us; 1us; 3us; 5us; 1us; 2us; 0us; 2us; 0us; 5us; 0us; 3us; 1us; 3us; 0us; 9us; 5us; 6us; 2us; 2us; 0us; 6us; 7us; 5us; 0us; 8us; 8us; 5us; 10us; 11us; 6us; 1us; 3us; 0us; 2us; 4us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 2us; 2us; 1us; 3us; 5us; 1us; 3us; 0us; 3us; 3us; 0us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 6us; 2us; 4us; 4us; 3us; 1us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 4us; 6us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 3us; 3us; 4us; 4us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 10us; 11us; 11us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 23us; 23us; 24us; 24us; 24us; 24us; 24us; 24us; 24us; 25us; 25us; 25us; 26us; 26us; 27us; 27us; 27us; 28us; 28us; 28us; 29us; 29us; 29us; 29us; 30us; 30us; 30us; 31us; 31us; 32us; 33us; 33us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 35us; 35us; 36us; 36us; 36us; 37us; 37us; 38us; 38us; 38us; 38us; 38us; 38us; 38us; 38us; 38us; 38us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 16386us; 16387us; 16388us; 65535us; 65535us; 16389us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16393us; 16394us; 65535us; 16395us; 16396us; 65535us; 65535us; 16397us; 65535us; 65535us; 65535us; 16398us; 16399us; 16400us; 65535us; 65535us; 16401us; 65535us; 65535us; 65535us; 65535us; 16402us; 16403us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 65535us; 65535us; 16408us; 65535us; 65535us; 16410us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 16416us; 65535us; 16417us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 16430us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 16434us; 65535us; 65535us; 16436us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16449us; 65535us; 16450us; 16451us; 65535us; 65535us; 16452us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16464us; 65535us; 65535us; 16465us; 16466us; 65535us; 65535us; 16467us; 65535us; 65535us; 16469us; 65535us; 65535us; 16470us; 65535us; 65535us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; 16478us; 16479us; 65535us; 65535us; 65535us; 16480us; 65535us; 16481us; 65535us; 65535us; 16482us; 65535us; 65535us; 65535us; 16483us; 65535us; 65535us; 65535us; 65535us; 65535us; 16484us; 16485us; 65535us; 16486us; 16488us; 65535us; 16489us; 65535us; 16491us; 65535us; 16492us; 16493us; 16494us; 16495us; 16496us; 16497us; 16498us; 65535us; 16499us; 65535us; 65535us; 16500us; |]
let _fsyacc_reductions ()  =    [| 
# 518 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : AST)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 527 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prog)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "ParserImpl.fsy"
                                   _1 
                   )
# 81 "ParserImpl.fsy"
                 : AST));
# 538 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "ParserImpl.fsy"
                                 Expr _1 
                   )
# 86 "ParserImpl.fsy"
                 : 'prog));
# 549 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tops)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "ParserImpl.fsy"
                                 match _1 with
                                 | [] -> Empty
                                 | _  -> Prgm (Array.ofList _1)
                               
                   )
# 87 "ParserImpl.fsy"
                 : 'prog));
# 563 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "ParserImpl.fsy"
                                 Empty 
                   )
# 91 "ParserImpl.fsy"
                 : 'prog));
# 573 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowSepType2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "ParserImpl.fsy"
                                                     _2 :: _3 
                   )
# 102 "ParserImpl.fsy"
                 : 'arrowSepType2));
# 585 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "ParserImpl.fsy"
                                                     [] 
                   )
# 103 "ParserImpl.fsy"
                 : 'arrowSepType2));
# 595 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepType1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "ParserImpl.fsy"
                                                     _2 :: _3 
                   )
# 108 "ParserImpl.fsy"
                 : 'commaSepType1));
# 607 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "ParserImpl.fsy"
                                                     [] 
                   )
# 109 "ParserImpl.fsy"
                 : 'commaSepType1));
# 617 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type3)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'type3)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowSepType2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "ParserImpl.fsy"
                             Array.ofList (_1 :: _3 :: _4) |> TFun 
                   )
# 115 "ParserImpl.fsy"
                 : 'type1));
# 630 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "ParserImpl.fsy"
                                 _1 
                   )
# 117 "ParserImpl.fsy"
                 : 'type1));
# 641 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "ParserImpl.fsy"
                                     TRef _2 
                   )
# 122 "ParserImpl.fsy"
                 : 'type2));
# 652 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "ParserImpl.fsy"
                                     _1 
                   )
# 123 "ParserImpl.fsy"
                 : 'type2));
# 663 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "ParserImpl.fsy"
                                           _2 
                   )
# 128 "ParserImpl.fsy"
                 : 'type3));
# 674 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepType1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "ParserImpl.fsy"
                             Array.ofList (_2 :: _4 :: _5) |> TTuple 
                   )
# 131 "ParserImpl.fsy"
                 : 'type3));
# 687 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "ParserImpl.fsy"
                                     TUnit 
                   )
# 133 "ParserImpl.fsy"
                 : 'type3));
# 697 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "ParserImpl.fsy"
                                     match _1 with
                                     | "Int"    -> TInt
                                     | "Bool"   -> TBool
                                     | "String" -> TString
                                     | s        -> TUser s
                                   
                   )
# 135 "ParserImpl.fsy"
                 : 'type3));
# 713 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "ParserImpl.fsy"
                                               TList _2 
                   )
# 142 "ParserImpl.fsy"
                 : 'type3));
# 724 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "ParserImpl.fsy"
                                                    Typed (_2, _4) 
                   )
# 147 "ParserImpl.fsy"
                 : 'parameter));
# 736 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "ParserImpl.fsy"
                                                    Untyped _1 
                   )
# 148 "ParserImpl.fsy"
                 : 'parameter));
# 747 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parameter)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parameters)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "ParserImpl.fsy"
                                                _1 :: _2 
                   )
# 153 "ParserImpl.fsy"
                 : 'parameters));
# 759 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "ParserImpl.fsy"
                                                [] 
                   )
# 154 "ParserImpl.fsy"
                 : 'parameters));
# 769 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "ParserImpl.fsy"
                                        _2 
                   )
# 159 "ParserImpl.fsy"
                 : 'returnType));
# 780 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "ParserImpl.fsy"
                                        TUnknown 
                   )
# 160 "ParserImpl.fsy"
                 : 'returnType));
# 790 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recDefRec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "ParserImpl.fsy"
                                                          (_2, _4) :: _5 
                   )
# 165 "ParserImpl.fsy"
                 : 'recDefRec));
# 803 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "ParserImpl.fsy"
                                                          [] 
                   )
# 166 "ParserImpl.fsy"
                 : 'recDefRec));
# 813 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "ParserImpl.fsy"
                                            match _3 with
                                            | TTuple a -> (_1, a)
                                            | t        -> (_1, [|t|])
                                          
                   )
# 171 "ParserImpl.fsy"
                 : 'variantCase));
# 828 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "ParserImpl.fsy"
                                            (_1, [||]) 
                   )
# 175 "ParserImpl.fsy"
                 : 'variantCase));
# 839 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'variantCase)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'variantRec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "ParserImpl.fsy"
                                                      _2 :: _3 
                   )
# 180 "ParserImpl.fsy"
                 : 'variantRec));
# 851 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "ParserImpl.fsy"
                                                      [] 
                   )
# 181 "ParserImpl.fsy"
                 : 'variantRec));
# 861 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'type1)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'recDefRec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "ParserImpl.fsy"
                             EDefRecord(_2, Array.ofList ((_5, _7) ::_8)) 
                   )
# 187 "ParserImpl.fsy"
                 : 'typeDef));
# 875 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'variantCase)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'variantRec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "ParserImpl.fsy"
                             EDefADT (_2, Array.ofList (_4 :: _5)) 
                   )
# 190 "ParserImpl.fsy"
                 : 'typeDef));
# 888 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'variantCase)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'variantRec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "ParserImpl.fsy"
                             EDefADT (_2, Array.ofList (_5 :: _6)) 
                   )
# 193 "ParserImpl.fsy"
                 : 'typeDef));
# 901 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topLet)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tops)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "ParserImpl.fsy"
                                        _1 :: _2 
                   )
# 204 "ParserImpl.fsy"
                 : 'tops));
# 913 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeDef)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tops)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "ParserImpl.fsy"
                                        _1 :: _2 
                   )
# 205 "ParserImpl.fsy"
                 : 'tops));
# 925 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "ParserImpl.fsy"
                                        [] 
                   )
# 206 "ParserImpl.fsy"
                 : 'tops));
# 935 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parameters)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'returnType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "ParserImpl.fsy"
                             ETopLet   (_2, Array.ofList _3, _4, _6) 
                   )
# 212 "ParserImpl.fsy"
                 : 'topLet));
# 949 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'parameters)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'returnType)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "ParserImpl.fsy"
                             ETopLetRec(_3, Array.ofList _4, _5, _7) 
                   )
# 215 "ParserImpl.fsy"
                 : 'topLet));
# 963 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'manyMatchCase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "ParserImpl.fsy"
                                                              (_2, _4) :: _5 
                   )
# 226 "ParserImpl.fsy"
                 : 'manyMatchCase));
# 976 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "ParserImpl.fsy"
                                                              [] 
                   )
# 227 "ParserImpl.fsy"
                 : 'manyMatchCase));
# 986 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parameters)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'returnType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "ParserImpl.fsy"
                             ELet   (_2, Array.ofList _3, _4, _6, _8) 
                   )
# 233 "ParserImpl.fsy"
                 : 'expr1));
# 1001 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parameters)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'returnType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "ParserImpl.fsy"
                             ELetRec(_2, Array.ofList _3, _4, _6, _8) 
                   )
# 236 "ParserImpl.fsy"
                 : 'expr1));
# 1016 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parameter)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parameters)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "ParserImpl.fsy"
                             ELambda(Array.ofList (_2 :: _3), _5)
                   )
# 239 "ParserImpl.fsy"
                 : 'expr1));
# 1029 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'manyMatchCase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "ParserImpl.fsy"
                             EMatch (_3, Array.ofList ((_6, _8) :: _9)) 
                   )
# 242 "ParserImpl.fsy"
                 : 'expr1));
# 1043 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'manyMatchCase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "ParserImpl.fsy"
                             EMatch (_3, Array.ofList ((_7, _9) :: _10)) 
                   )
# 245 "ParserImpl.fsy"
                 : 'expr1));
# 1057 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "ParserImpl.fsy"
                                                          EIf (_2, _4, _6) 
                   )
# 247 "ParserImpl.fsy"
                 : 'expr1));
# 1070 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "ParserImpl.fsy"
                                 _1 
                   )
# 249 "ParserImpl.fsy"
                 : 'expr1));
# 1081 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr3)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'semiSepExpr3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "ParserImpl.fsy"
                                                   _2 :: _3 
                   )
# 254 "ParserImpl.fsy"
                 : 'semiSepExpr3));
# 1093 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "ParserImpl.fsy"
                                                   [] 
                   )
# 255 "ParserImpl.fsy"
                 : 'semiSepExpr3));
# 1103 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "ParserImpl.fsy"
                                      ESeq [|_1; EUnit|]
                   )
# 260 "ParserImpl.fsy"
                 : 'expr2));
# 1114 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr3)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr3)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'semiSepExpr3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 "ParserImpl.fsy"
                             Array.ofList (_1 :: _3 :: _4) |> ESeq 
                   )
# 263 "ParserImpl.fsy"
                 : 'expr2));
# 1127 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "ParserImpl.fsy"
                                 _1 
                   )
# 265 "ParserImpl.fsy"
                 : 'expr2));
# 1138 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "ParserImpl.fsy"
                                              EBop (_1, RefAsn, _3) 
                   )
# 269 "ParserImpl.fsy"
                 : 'expr3));
# 1150 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr4)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 "ParserImpl.fsy"
                                              _1 
                   )
# 270 "ParserImpl.fsy"
                 : 'expr3));
# 1161 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr5)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "ParserImpl.fsy"
                                             EBop(_1, Or, _3) 
                   )
# 275 "ParserImpl.fsy"
                 : 'expr4));
# 1173 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr5)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 "ParserImpl.fsy"
                                             _1 
                   )
# 276 "ParserImpl.fsy"
                 : 'expr4));
# 1184 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr5)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr6)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "ParserImpl.fsy"
                                             EBop(_1, And, _3) 
                   )
# 281 "ParserImpl.fsy"
                 : 'expr5));
# 1196 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr6)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "ParserImpl.fsy"
                                             _1 
                   )
# 282 "ParserImpl.fsy"
                 : 'expr5));
# 1207 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr6)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 "ParserImpl.fsy"
                                            EBop(_1, Eq, _3) 
                   )
# 287 "ParserImpl.fsy"
                 : 'expr6));
# 1219 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr6)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 288 "ParserImpl.fsy"
                                            EBop(_1, Ne, _3) 
                   )
# 288 "ParserImpl.fsy"
                 : 'expr6));
# 1231 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr6)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 "ParserImpl.fsy"
                                            EBop(_1, Lt, _3) 
                   )
# 289 "ParserImpl.fsy"
                 : 'expr6));
# 1243 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr6)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 "ParserImpl.fsy"
                                            EBop(_1, Gt, _3) 
                   )
# 290 "ParserImpl.fsy"
                 : 'expr6));
# 1255 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr6)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "ParserImpl.fsy"
                                            EBop(_1, Le, _3) 
                   )
# 291 "ParserImpl.fsy"
                 : 'expr6));
# 1267 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr6)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 "ParserImpl.fsy"
                                            EBop(_1, Ge, _3) 
                   )
# 292 "ParserImpl.fsy"
                 : 'expr6));
# 1279 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 "ParserImpl.fsy"
                                            _1 
                   )
# 293 "ParserImpl.fsy"
                 : 'expr6));
# 1290 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "ParserImpl.fsy"
                                                 EBop(_1, ListConcat  , _3) 
                   )
# 298 "ParserImpl.fsy"
                 : 'expr7));
# 1302 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr7)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 "ParserImpl.fsy"
                                                 EBop(_1, StringConcat, _3) 
                   )
# 299 "ParserImpl.fsy"
                 : 'expr7));
# 1314 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 "ParserImpl.fsy"
                                                 _1 
                   )
# 300 "ParserImpl.fsy"
                 : 'expr7));
# 1325 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr9)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 "ParserImpl.fsy"
                                                  EBop(_1, ListCons, _3) 
                   )
# 305 "ParserImpl.fsy"
                 : 'expr8));
# 1337 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr9)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 "ParserImpl.fsy"
                                                  _1 
                   )
# 306 "ParserImpl.fsy"
                 : 'expr8));
# 1348 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr9)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr10)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 "ParserImpl.fsy"
                                              EBop(_1, Add, _3) 
                   )
# 311 "ParserImpl.fsy"
                 : 'expr9));
# 1360 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr9)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr10)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 "ParserImpl.fsy"
                                              EBop(_1, Sub, _3) 
                   )
# 312 "ParserImpl.fsy"
                 : 'expr9));
# 1372 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr10)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "ParserImpl.fsy"
                                              _1 
                   )
# 313 "ParserImpl.fsy"
                 : 'expr9));
# 1383 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr10)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr11)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 "ParserImpl.fsy"
                                               EBop(_1, Mul, _3) 
                   )
# 318 "ParserImpl.fsy"
                 : 'expr10));
# 1395 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr10)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr11)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 "ParserImpl.fsy"
                                               EBop(_1, Div, _3) 
                   )
# 319 "ParserImpl.fsy"
                 : 'expr10));
# 1407 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr11)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 "ParserImpl.fsy"
                                               _1 
                   )
# 320 "ParserImpl.fsy"
                 : 'expr10));
# 1418 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr11)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr12)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 "ParserImpl.fsy"
                                         EApp (_1, _2) 
                   )
# 325 "ParserImpl.fsy"
                 : 'expr11));
# 1430 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr12)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 "ParserImpl.fsy"
                                         ERefLit _2 
                   )
# 326 "ParserImpl.fsy"
                 : 'expr11));
# 1441 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr12)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 "ParserImpl.fsy"
                                         EDeRef _2 
                   )
# 327 "ParserImpl.fsy"
                 : 'expr11));
# 1452 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr12)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 "ParserImpl.fsy"
                                         _1 
                   )
# 328 "ParserImpl.fsy"
                 : 'expr11));
# 1463 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr12)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 "ParserImpl.fsy"
                                                          EProjRec (_1, _3) 
                   )
# 333 "ParserImpl.fsy"
                 : 'expr12));
# 1475 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr12)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 "ParserImpl.fsy"
                                                          EProjAgg (_1, _4) 
                   )
# 334 "ParserImpl.fsy"
                 : 'expr12));
# 1487 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr13)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 "ParserImpl.fsy"
                                                          _1 
                   )
# 335 "ParserImpl.fsy"
                 : 'expr12));
# 1498 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepExpr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 "ParserImpl.fsy"
                                                     _2 :: _3 
                   )
# 340 "ParserImpl.fsy"
                 : 'commaSepExpr1));
# 1510 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "ParserImpl.fsy"
                                                     [] 
                   )
# 341 "ParserImpl.fsy"
                 : 'commaSepExpr1));
# 1520 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 "ParserImpl.fsy"
                                         (_1, _3) 
                   )
# 346 "ParserImpl.fsy"
                 : 'recordRow));
# 1532 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordRow)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepRecordRow)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 351 "ParserImpl.fsy"
                                                             _2 :: _3 
                   )
# 351 "ParserImpl.fsy"
                 : 'commaSepRecordRow));
# 1544 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 "ParserImpl.fsy"
                                                             [] 
                   )
# 352 "ParserImpl.fsy"
                 : 'commaSepRecordRow));
# 1554 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 357 "ParserImpl.fsy"
                                           _2 
                   )
# 357 "ParserImpl.fsy"
                 : 'expr13));
# 1565 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 "ParserImpl.fsy"
                                           EUnit 
                   )
# 358 "ParserImpl.fsy"
                 : 'expr13));
# 1575 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 "ParserImpl.fsy"
                                           EBool false 
                   )
# 359 "ParserImpl.fsy"
                 : 'expr13));
# 1585 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 360 "ParserImpl.fsy"
                                           EBool true 
                   )
# 360 "ParserImpl.fsy"
                 : 'expr13));
# 1595 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 361 "ParserImpl.fsy"
                                           EInt _1 
                   )
# 361 "ParserImpl.fsy"
                 : 'expr13));
# 1606 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 "ParserImpl.fsy"
                                           EVar _1 
                   )
# 362 "ParserImpl.fsy"
                 : 'expr13));
# 1617 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 "ParserImpl.fsy"
                                           EString _1 
                   )
# 363 "ParserImpl.fsy"
                 : 'expr13));
# 1628 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 364 "ParserImpl.fsy"
                                           EConstructor _1 
                   )
# 364 "ParserImpl.fsy"
                 : 'expr13));
# 1639 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepExpr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 "ParserImpl.fsy"
                             Array.ofList (_2 :: _4 :: _5) |> ETuple 
                   )
# 367 "ParserImpl.fsy"
                 : 'expr13));
# 1652 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 369 "ParserImpl.fsy"
                                         EList [||] 
                   )
# 369 "ParserImpl.fsy"
                 : 'expr13));
# 1662 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepExpr1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 371 "ParserImpl.fsy"
                                                             Array.ofList (_2 :: _3) |> EList 
                   )
# 371 "ParserImpl.fsy"
                 : 'expr13));
# 1674 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordRow)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepRecordRow)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 "ParserImpl.fsy"
                             Array.ofList (_2 :: _3) |> ERecordLit 
                   )
# 374 "ParserImpl.fsy"
                 : 'expr13));
# 1686 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 "ParserImpl.fsy"
                                                PListCons (_1, _3) 
                   )
# 386 "ParserImpl.fsy"
                 : 'pat1));
# 1698 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 387 "ParserImpl.fsy"
                                                _1 
                   )
# 387 "ParserImpl.fsy"
                 : 'pat1));
# 1709 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 393 "ParserImpl.fsy"
                                     match _2 with
                                     | PTuple ps -> PADT (_1, ps)
                                     | p         -> PADT (_1, [|p|])
                                   
                   )
# 393 "ParserImpl.fsy"
                 : 'pat2));
# 1724 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 397 "ParserImpl.fsy"
                                     PADT (_1, [||]) 
                   )
# 397 "ParserImpl.fsy"
                 : 'pat2));
# 1735 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat3)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 "ParserImpl.fsy"
                                     _1 
                   )
# 398 "ParserImpl.fsy"
                 : 'pat2));
# 1746 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepPat1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 403 "ParserImpl.fsy"
                                                   _2 :: _3 
                   )
# 403 "ParserImpl.fsy"
                 : 'commaSepPat1));
# 1758 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 404 "ParserImpl.fsy"
                                                   [] 
                   )
# 404 "ParserImpl.fsy"
                 : 'commaSepPat1));
# 1768 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 409 "ParserImpl.fsy"
                                          _2 
                   )
# 409 "ParserImpl.fsy"
                 : 'pat3));
# 1779 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 410 "ParserImpl.fsy"
                                          PList [||] 
                   )
# 410 "ParserImpl.fsy"
                 : 'pat3));
# 1789 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 411 "ParserImpl.fsy"
                                          PUnit 
                   )
# 411 "ParserImpl.fsy"
                 : 'pat3));
# 1799 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 412 "ParserImpl.fsy"
                                          PString _1 
                   )
# 412 "ParserImpl.fsy"
                 : 'pat3));
# 1810 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 413 "ParserImpl.fsy"
                                          PBool false 
                   )
# 413 "ParserImpl.fsy"
                 : 'pat3));
# 1820 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 414 "ParserImpl.fsy"
                                          PBool true 
                   )
# 414 "ParserImpl.fsy"
                 : 'pat3));
# 1830 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 415 "ParserImpl.fsy"
                                          PInt _1 
                   )
# 415 "ParserImpl.fsy"
                 : 'pat3));
# 1841 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 416 "ParserImpl.fsy"
                                          PVar _1 
                   )
# 416 "ParserImpl.fsy"
                 : 'pat3));
# 1852 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepPat1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 "ParserImpl.fsy"
                             Array.ofList (_2 :: _3) |> PList 
                   )
# 419 "ParserImpl.fsy"
                 : 'pat3));
# 1864 "ParserImpl.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'pat1)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'commaSepPat1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 422 "ParserImpl.fsy"
                             Array.ofList (_2 :: _4 :: _5) |> PTuple 
                   )
# 422 "ParserImpl.fsy"
                 : 'pat3));
|]
# 1878 "ParserImpl.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 53;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : AST =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
